<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright  2017  Department of Biomedical Informatics, University of Utah
  ~ <p>
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~ <p>
  ~ http://www.apache.org/licenses/LICENSE-2.0
  ~ <p>
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->
<config>
    <username>test</username>
    <server>jdbc:mysql://localhost?useSSL=false&amp;serverTimezone=America/Boise</server>
    <password>test</password>
    <databaseName>test</databaseName>
    <driver>com.mysql.cj.jdbc.Driver</driver>
    <concurUpdatable>true</concurUpdatable>
    <createTables>
        <item>
            <name>LOG</name>
            <sql>
                <item>
                    CREATE TABLE IF NOT EXISTS {databaseName}.LOG (
                    RUN_ID INT AUTO_INCREMENT PRIMARY KEY,
                    ANNOTATOR VARCHAR(100),
                    START_DTM DATETIME,
                    END_DTM DATETIME,
                    NUM_NOTES INT,
                    COMMENTS TEXT);
                </item>
            </sql>
        </item>
        <item>
            <name>ANNOTATORS</name>
            <sql>
                <item>
                    CREATE TABLE IF NOT EXISTS {databaseName}.ANNOTATORS (
                    ID INT AUTO_INCREMENT PRIMARY KEY,
                    ANNOTATOR VARCHAR(100),
                    ADD_DTM TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP);
                </item>
                <item>
                    CREATE INDEX IF NOT EXISTS ANNOTATORS_INX ON {databaseName}.ANNOTATORS (ANNOTATOR);
                </item>
            </sql>
        </item>
    </createTables>
    <dropTables>
        <item>
            <name>LOG</name>
            <sql>
                <item>DROP TABLE {databaseName}.LOG</item>
            </sql>
        </item>
        <item>
            <name>ANNOTATORS</name>
            <sql>
                <item>DROP TABLE {databaseName}.ANNOTATORS</item>
            </sql>
        </item>
    </dropTables>
    <queryStatements>
        <item>
            <name>queryAnnotators</name>
            <sql>SELECT ANNOTATOR FROM {databaseName}.ANNOTATORS;</sql>
        </item>
        <item>
            <name>checkAnnotatorExist</name>
            <sql>SELECT COUNT(*) FROM {databaseName}.ANNOTATORS WHERE ANNOTATOR=?</sql>
        </item>
        <item>
            <name>getColumnsInfo</name>
            <sql>SHOW COLUMNS FROM {databaseName}.{tableName};</sql>
        </item>
        <item>
            <name>checkTableExists</name>
            <sql>
                SELECT COUNT(*) FROM information_schema.tables WHERE table_schema = '{databaseName}' AND table_name =?;
            </sql>
        </item>
        <item>
            <name>lastIdofLOG</name>
            <sql>SELECT RUN_ID FROM {databaseName}.LOG ORDER BY RUN_ID DESC LIMIT 1;</sql>
        </item>
        <item>
            <name>masterInputQuery</name>
            <sql>SELECT DOC_ID, DATASET_ID,DOC_NAME,TEXT FROM {databaseName}.{tableName} WHERE DATASET_ID = ?;
            </sql>
        </item>
        <item>
            <name>masterCountQuery</name>
            <sql>SELECT COUNT(*) FROM {databaseName}.{tableName} WHERE DATASET_ID = ?;
            </sql>
        </item>
        <item>
            <name>logQuery</name>
            <sql>SELECT RUN_ID, START_DTM, END_DTM, NUM_NOTES, COMMENTS FROM {databaseName}.LOG WHERE RUN_ID=?;
            </sql>
        </item>
        <item>
            <name>maxRunIDofAnnotator</name>
            <sql>SELECT MAX(RUN_ID) FROM {databaseName}.{tableName} WHERE ANNOTATOR=?</sql>
        </item>
        <!--<item>-->
        <!--<sql>SELECT DOC_NAME, TYPE, ANNO_TEXT, FEATURES,SNIPPET, ANNOTATOR,BEGIN, END,SNIPPET_BEGIN,-->
        <!--SNIPPET_END,TEXT-->
        <!--FROM OUTPUT JOIN DOCUMENTS ON OUTPUT.DOC_ID=DOCUMENTS.DOC_ID-->
        <!--</sql>-->
        <!--</item>-->
    </queryStatements>

    <insertStatements>
        <item>
            <name>LOG</name>
            <returnKey>RUN_ID</returnKey>
            <sql>INSERT INTO {databaseName}.LOG (ANNOTATOR, START_DTM, END_DTM, NUM_NOTES, COMMENTS) VALUES (?,?,?,?,?)
            </sql>
        </item>
        <item>
            <name>ANNOTATORS</name>
            <returnKey>ID</returnKey>
            <sql>INSERT INTO {databaseName}.ANNOTATORS (ANNOTATOR, ADD_DTM) VALUES (?,CURRENT_TIMESTAMP)
            </sql>
        </item>
    </insertStatements>
    <updateStatements>
        <item>
            <name>LOG</name>
            <sql>UPDATE {databaseName}.LOG SET ANNOTATOR=?,START_DTM=?, END_DTM=?, NUM_NOTES=?, COMMENTS=? WHERE RUN_ID=?
            </sql>
        </item>
    </updateStatements>
    <templates>
        <item>
            <name>ANNOTATION_TABLE</name>
            <sql>
                <item>
                    CREATE TABLE IF NOT EXISTS {databaseName}.{tableName}(ID INT AUTO_INCREMENT PRIMARY KEY,
                    DOC_NAME VARCHAR(100),
                    ANNOTATOR VARCHAR(100),
                    RUN_ID INT,
                    TYPE VARCHAR(200),
                    BEGIN INT,
                    END INT,
                    SNIPPET_BEGIN INT,
                    TEXT TEXT,
                    FEATURES TEXT,
                    SNIPPET TEXT,
                    COMMENTS TEXT,
                    CREATE_DTM DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP);

                </item>
                <item>
                    CREATE INDEX IF NOT EXISTS {tableName}_RUN_IND ON {databaseName}.{tableName} (RUN_ID);
                </item>
                <item>
                    CREATE INDEX IF NOT EXISTS {tableName}_TYPE_IND ON {databaseName}.{tableName} (TYPE);
                </item>
                <item>
                    CREATE INDEX IF NOT EXISTS {tableName}_ANNO_IND ON {databaseName}.{tableName} (ANNOTATOR);
                </item>
                <item>
                    CREATE INDEX IF NOT EXISTS {tableName}_DOC_IND ON {databaseName}.{tableName} (DOC_NAME);
                </item>
            </sql>
            <returnKey>ID</returnKey>
            <insert>INSERT INTO {databaseName}.{tableName} (DOC_NAME,ANNOTATOR, RUN_ID,TYPE,BEGIN,END,SNIPPET_BEGIN, TEXT,
                FEATURES,SNIPPET,COMMENTS)
                VALUES (?,?,?,?,?,?,?,?,?,?,?);
            </insert>
            <query>SELECT * FROM {databaseName}.{tableName} WHERE ANNOTATOR=?;</query>
            <drop>
                <item>DROP TABLE {databaseName}.{tableName};</item>
            </drop>
        </item>
        <item>
            <!--this should be a view in production env, the table is only for testing purposes-->
            <name>DOCUMENTS</name>
            <sql>
                <item>
                    CREATE TABLE IF NOT EXISTS {databaseName}.{tableName} (
                    DOC_ID INT AUTO_INCREMENT PRIMARY KEY,
                    DATASET_ID CHAR(10),
                    DOC_NAME VARCHAR(100),
                    TEXT TEXT,
                    INSERT_DTM DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP);
                </item>
                <item>
                    CREATE INDEX IF NOT EXISTS {tableName}_DOC_IND ON {databaseName}.{tableName} (DOC_NAME);
                </item>
                <item>
                    CREATE INDEX IF NOT EXISTS {tableName}_DATATSET_IND ON {databaseName}.{tableName} (DATASET_ID);
                </item>
            </sql>
            <insert>INSERT INTO {databaseName}.{tableName} (DATASET_ID, DOC_NAME, TEXT,INSERT_DTM) VALUES (?,?,?,CURRENT_TIMESTAMP);
            </insert>
            <query>SELECT * FROM {databaseName}.{tableName} WHERE DOC_ID=?;</query>
            <drop>
                <item>DROP TABLE {databaseName}.{tableName};</item>
            </drop>
        </item>
    </templates>

</config>