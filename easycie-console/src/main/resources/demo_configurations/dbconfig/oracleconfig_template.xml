<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright  2017  Department of Biomedical Informatics, University of Utah
  ~ <p>
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~ <p>
  ~ http://www.apache.org/licenses/LICENSE-2.0
  ~ <p>
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->
<config>
    <username>{USERNAME}</username>
    <server>jdbc:oracle:thin:@(DESCRIPTION=(ADDRESS = (PROTOCOL = TCP)(HOST = prodrac-scan.med.utah.edu)(PORT =
        1521))(LOAD_BALANCE = YES)(CONNECT_DATA =(SERVER = DEDICATED)(SERVICE_NAME
        =DWRAC_BMI.med.utah.edu)(FAILOVER_MODE =(TYPE = SELECT)(METHOD = BASIC)(RETRIES = 180)(DELAY = 5))))</server>
    <password>{PASSWORD}</password>
    <databaseName>{DATABASENAME}</databaseName>
    <driver>oracle.jdbc.driver.OracleDriver</driver>
    <concurUpdatable>true</concurUpdatable>
    <createTables>
        <item>
            <name>LOG</name>
            <sql>
                <item>
                    CREATE TABLE LOG (
                    RUN_ID INTEGER PRIMARY KEY AUTOINCREMENT,
                    ANNOTATOR TEXT,
                    START_DTM DATETIME,
                    END_DTM DATETIME,
                    NUM_NOTES NUMBER(22,0),
                    COMMENTS TEXT);
                </item>
            </sql>
        </item>
        <item>
            <name>ANNOTATORS</name>
            <sql>
                <item>
                    CREATE TABLE ANNOTATORS (
                    ID INTEGER PRIMARY KEY AUTOINCREMENT,
                    ANNOTATOR TEXT,
                    ADD_DTM DATETIME);
                </item>
                <item>
                    CREATE INDEX IF NOT EXISTS ANNOTATORS_INX ON ANNOTATORS (ANNOTATOR);
                </item>
            </sql>
        </item>
    </createTables>
    <dropTables>
        <item>
            <name>LOG</name>
            <sql>
                <item>DROP TABLE LOG</item>
            </sql>
        </item>
        <item>
            <name>ANNOTATORS</name>
            <sql>
                <item>DROP TABLE ANNOTATORS</item>
            </sql>
        </item>
    </dropTables>
    <queryStatements>
        <item>
            <name>queryDocs</name>
            <sql>SELECT BUNCH_ID PAT_ID, BUNCH_ID, NOTE_ID DOC_ID, NOTE_ID DOC_NAME, TEXT, N.RPT_TYPE_CD, PROC_DT "DATE", OPERATION_DATE REF_DTM, ROUND(N.PROC_DT-S.OPERATION_DATE) DIFF_DTM,'0' DATASET_ID
                FROM {tableName} S JOIN DSS_DATASETS.BUCHER_EPIC_HL7_87482 N ON  N.PAT_ID=S.PAT_ID
                INNER JOIN BRIAN_SAMPLE_NOTE_TYPES T ON N.RPT_TYPE_CD=T.RPT_TYPE_CD
                INNER JOIN BRIAN_SAMPLE_PROV_TYPES P ON N.PROV_TYPE=P.PROV_TYPE
                WHERE STATUS IN ('F','AU') AND ((N.PROC_DT-S.OPERATION_DATE)>-1) AND ((N.PROC_DT-S.OPERATION_DATE)&lt;41) AND LENGTH(TEXT)>50 AND DATASET_ID=? AND S.OPERATION_DATE> DATE '2014-08-31'
                ORDER BY BUNCH_ID,"DATE",NOTE_ID  </sql>
        </item>
        <item>
            <name>queryAnnos</name>
            <sql>SELECT ID,DOC_NAME,TYPE,SNIPPET,BEGIN,END,SNIPPET_BEGIN,TEXT,FEATURES,COMMENTS,ANNOTATOR,RUN_ID FROM
                {tableName} RS
            </sql>
        </item>
        <item>
            <name>querySnippetAnnos</name>
            <sql>SELECT RS.ID,RS.DOC_NAME, RS.TYPE,RS.SNIPPET, RS.BEGIN,RS.END,RS.SNIPPET_BEGIN,IT.TEXT DOC_TEXT,
                RS.FEATURES,IT.DATE, IT.REF_DATE,RS.COMMENTS,RS.ANNOTATOR,RS.RUN_ID FROM
                {tableName} RS JOIN {inputTable} IT ON RS.DOC_NAME=IT.DOC_NAME
            </sql>
        </item>
        <item>
            <name>queryDocSnippetAnnos</name>
            <sql>
                SELECT RD.ID,RD.DOC_NAME,RD."TYPE" DOC_TYPE, RD.FEATURES DOC_FEATURES, RS.ID RSID, RS."TYPE",RS.SNIPPET,RS.BEGIN,RS.END,RS.SNIPPET_BEGIN,
                RS.FEATURES, RS.COMMENTS,RD.ANNOTATOR,RD.RUN_ID
                FROM {docResultTable} RD LEFT OUTER JOIN {tableName} RS ON RD.DOC_NAME=RS.DOC_NAME WHERE ROWNUM&lt;100
            </sql>
            <sql11>SELECT RD.ID,IT.BUNCH_ID,RD.DOC_NAME,RD.TYPE DOC_TYPE, RD.FEATURES DOC_FEATURES, RS.ID RSID, RS.TYPE,RS.SNIPPET,RS.BEGIN,RS.END,RS.SNIPPET_BEGIN,IT.TEXT DOC_TEXT,
                RS.FEATURES,IT.DATE, IT.REF_DATE,RS.COMMENTS,RD.ANNOTATOR,RD.RUN_ID
                FROM
                {docResultTable} RD LEFT OUTER JOIN {tableName} RS ON RD.DOC_NAME=RS.DOC_NAME JOIN {inputTable} IT ON RD.DOC_NAME=IT.DOC_NAME
            </sql11>
        </item>
        <item>
            <name>queryBunchDocSnippetAnnos</name>
            <sql>SELECT RD.ID ,IT.BUNCH_ID BID,RD.DOC_NAME,RD.DOC_NAME DID,RB.TYPE BUNCH_TYPE, RD.TYPE DOC_TYPE, RS.TYPE,RS.SNIPPET,RS.BEGIN,RS.END,RS.SNIPPET_BEGIN,
                RS.FEATURES,IT.DATE, IT.REF_DATE,RS.COMMENTS,RS.ANNOTATOR,RB.RUN_ID
                FROM {bunchResultTable} RB JOIN
                (
                SELECT BUNCH_ID PAT_ID, BUNCH_ID, NOTE_ID DOC_ID, NOTE_ID DOC_NAME, TEXT, N.RPT_TYPE_CD, PROC_DT "DATE", OPERATION_DATE REF_DTM, ROUND(N.PROC_DT-S.OPERATION_DATE) DIFF_DTM,'0' DATASET_ID
                FROM {inputTable} S JOIN DSS_DATASETS.BUCHER_EPIC_HL7_87482 N ON  N.PAT_ID=S.PAT_ID
                WHERE STATUS IN ('F','AU') AND ((N.PROC_DT-S.OPERATION_DATE)>-1) AND ((N.PROC_DT-S.OPERATION_DATE)&lt;41) AND LENGTH(TEXT)>50 AND DATASET_ID=0 AND S.OPERATION_DATE>= DATE '2014-08-31'
                UNION ALL
                SELECT  S.PAT_ID, BUNCH_ID, REQUEST_ID+ROWNUM DOC_ID, REQUEST_ID+ROWNUM DOC_NAME, TO_CLOB(( PANEL_NAME || ': ' || OBSVTN_VALUE ))  TEXT, 'LAB' RPT_TYPE_CD, OBS_DTM "DATE", OPERATION_DATE REF_DTM, ROUND(N.OBS_DTM-S.OPERATION_DATE) DIFF_DTM,'0' DATASET_ID
                FROM HAI_PATOS S JOIN EPIUTIL.BUCHER_MICRO_87482 N ON  N.PAT_ID=S.PAT_ID
                WHERE ((N.OBS_DTM -S.OPERATION_DATE)>-1) AND ((N.OBS_DTM-S.OPERATION_DATE)&lt;41) AND n.PANEL_NAME  LIKE 'Culture, Urine%')
                IT ON RB.DOC_NAME=IT.BUNCH_ID
                JOIN {docResultTable} RD ON IT.DOC_NAME=RD.DOC_NAME
                LEFT OUTER JOIN {tableName} RS ON RD.DOC_NAME=RS.DOC_NAME
            </sql>
        </item>
        <item>
            <name>exportExcel</name>
            <sql>SELECT ID,{tableName}.DOC_NAME,TYPE,SNIPPET,BEGIN,END,FEATURES FROM {tableName}</sql>
        </item>
        <item>
            <name>queryCount</name>
            <sql>SELECT COUNT(*) FROM {tableName}</sql>
        </item>
        <item>
            <name>queryAnnotators</name>
            <sql>SELECT ANNOTATOR FROM ANNOTATORS</sql>
        </item>
        <item>
            <name>checkAnnotatorExist</name>
            <sql>SELECT COUNT(*) FROM ANNOTATORS WHERE ANNOTATOR=?</sql>
        </item>
        <item>
            <name>getColumnsInfo</name>
            <sql>SELECT column_name, data_type, data_length FROM all_tab_columns WHERE table_name = ?</sql>
        </item>
        <item>
            <name>checkTableExists</name>
            <sql>
                SELECT COUNT(*) FROM DUAL WHERE EXISTS (SELECT * FROM ALL_OBJECTS WHERE OBJECT_TYPE =
                &apos;TABLE&apos;
                AND OWNER = &apos;{databaseName}&apos; AND OBJECT_NAME= ?)
            </sql>
        </item>
        <item>
            <name>lastIdofLOG</name>
            <sql>SELECT RUN_ID FROM LOG ORDER BY RUN_ID DESC LIMIT 1</sql>
        </item>
        <item>
            <name>masterInputQuery</name>
            <sql>
                SELECT BUNCH_ID PAT_ID, BUNCH_ID, DOC_ID, DOC_NAME, TEXT, RPT_TYPE_CD, "DATE", REF_DTM, DIFF_DTM, DATASET_ID
                FROM (
                SELECT BUNCH_ID PAT_ID, BUNCH_ID, NOTE_ID DOC_ID, NOTE_ID DOC_NAME, TEXT, N.RPT_TYPE_CD, PROC_DT "DATE", OPERATION_DATE REF_DTM, ROUND(N.PROC_DT-S.OPERATION_DATE) DIFF_DTM, DATASET_ID
                FROM {tableName} S JOIN DSS_DATASETS.BUCHER_EPIC_HL7_87482 N ON  N.PAT_ID=S.PAT_ID
                WHERE STATUS IN ('F','AU') AND ((N.PROC_DT-S.OPERATION_DATE)>-1) AND ((N.PROC_DT-S.OPERATION_DATE)&lt;41) AND LENGTH(TEXT)>50 AND DATASET_ID=0 AND S.OPERATION_DATE>= DATE '2014-08-31'
                UNION ALL
                SELECT  S.PAT_ID, BUNCH_ID, 9000000000+REQUEST_ID+ROWNUM DOC_ID, 9000000000+REQUEST_ID+ROWNUM DOC_NAME, TO_CLOB(( PANEL_NAME || ': ' || OBSVTN_VALUE || '	' || COMMENTS))  TEXT, 'LAB' RPT_TYPE_CD, OBS_DTM "DATE", OPERATION_DATE REF_DTM, ROUND(N.OBS_DTM-S.OPERATION_DATE) DIFF_DTM,0 DATASET_ID
                FROM HAI_PATOS S JOIN EPIUTIL.BUCHER_MICRO_87482 N ON  N.PAT_ID=S.PAT_ID
                WHERE ((N.OBS_DTM -S.OPERATION_DATE)>-1) AND ((N.OBS_DTM-S.OPERATION_DATE)&lt;41) AND n.PANEL_NAME  LIKE 'Culture, Urine%')
                WHERE DATASET_ID=?
                ORDER BY BUNCH_ID,"DATE",DOC_ID
            </sql>
        </item>
        <item>
            <name>masterCountQuery</name>
            <sqlB>SELECT 836507,? FROM LOG WHERE ROWNUM&lt;2</sqlB>
            <sql>SELECT COUNT(*),?
                FROM (
                SELECT BUNCH_ID PAT_ID, BUNCH_ID, NOTE_ID DOC_ID, NOTE_ID DOC_NAME, TEXT, N.RPT_TYPE_CD, PROC_DT "DATE", OPERATION_DATE REF_DTM, ROUND(N.PROC_DT-S.OPERATION_DATE) DIFF_DTM,'0' DATASET_ID
                FROM {tableName} S JOIN DSS_DATASETS.BUCHER_EPIC_HL7_87482 N ON  N.PAT_ID=S.PAT_ID
                WHERE STATUS IN ('F','AU') AND ((N.PROC_DT-S.OPERATION_DATE)>-1) AND ((N.PROC_DT-S.OPERATION_DATE)&lt;41) AND LENGTH(TEXT)>50 AND DATASET_ID=0 AND S.OPERATION_DATE>= DATE '2014-08-31'
                UNION ALL
                SELECT  S.PAT_ID, BUNCH_ID, REQUEST_ID+ROWNUM DOC_ID, REQUEST_ID+ROWNUM DOC_NAME, TO_CLOB(( PANEL_NAME || ': ' || OBSVTN_VALUE ))  TEXT, 'LAB' RPT_TYPE_CD, OBS_DTM "DATE", OPERATION_DATE REF_DTM, ROUND(N.OBS_DTM-S.OPERATION_DATE) DIFF_DTM,'0' DATASET_ID
                FROM HAI_PATOS S JOIN EPIUTIL.BUCHER_MICRO_87482 N ON  N.PAT_ID=S.PAT_ID
                WHERE ((N.OBS_DTM -S.OPERATION_DATE)>-1) AND ((N.OBS_DTM-S.OPERATION_DATE)&lt;41) AND n.PANEL_NAME  LIKE 'Culture, Urine%' )
            </sql>
        </item>
        <item>
            <name>maxRunIDofAnnotator</name>
            <sql>SELECT MAX(RUN_ID) FROM {tableName} WHERE ANNOTATOR=?</sql>
        </item>
        <item>
            <name>lastLogRunID</name>
            <sql>SELECT MAX(RUN_ID) FROM LOG WHERE ANNOTATOR=?</sql>
        </item>
        <item>
            <name>logQuery</name>
            <sql>SELECT RUN_ID, START_DTM, END_DTM, NUM_NOTES, COMMENTS FROM LOG WHERE RUN_ID=?;
            </sql>
        </item>
        <item>
            <name>maxRunID</name>
            <sql>SELECT MAX(RUN_ID) FROM {tableName} WHERE ANNOTATOR=?</sql>
        </item>
        <!--<item>-->
        <!--<sql>SELECT DOC_NAME, TYPE, ANNO_TEXT, FEATURES,SNIPPET, ANNOTATOR,BEGIN, END,SNIPPET_BEGIN,-->
        <!--SNIPPET_END,TEXT-->
        <!--FROM OUTPUT JOIN DOCUMENTS ON OUTPUT.DOC_ID=DOCUMENTS.DOC_ID-->
        <!--</sql>-->
        <!--</item>-->
    </queryStatements>

    <insertStatements>
        <item>
            <name>LOG</name>
            <returnKey>RUN_ID</returnKey>
            <sql>INSERT INTO LOG (ANNOTATOR, START_DTM, END_DTM, NUM_NOTES, COMMENTS) VALUES (?,?,?,?,?)
            </sql>
        </item>
        <item>
            <name>ANNOTATORS</name>
            <returnKey>ID</returnKey>
            <sql>INSERT INTO ANNOTATORS (ANNOTATOR, ADD_DTM) VALUES (?,CURRENT_TIMESTAMP)
            </sql>
        </item>
    </insertStatements>
    <updateStatements>
        <item>
            <name>LOG</name>
            <sql>UPDATE LOG SET ANNOTATOR=?,START_DTM=?, END_DTM=?, NUM_NOTES=?, COMMENTS=? WHERE RUN_ID=?
            </sql>
        </item>
    </updateStatements>
    <templates>
        <item>
            <name>ANNOTATION_TABLE</name>
            <sql>
                <item>
                    CREATE TABLE {databaseName}.{tableName} (
                    ID NUMBER(22,0) GENERATED ALWAYS AS IDENTITY,
                    DOC_NAME VARCHAR2(150),
                    ANNOTATOR VARCHAR2(20),
                    RUN_ID NUMBER(3,0),
                    TYPE VARCHAR2(60),
                    BEGIN NUMBER(8,0),
                    END NUMBER(8,0),
                    SNIPPET_BEGIN NUMBER(8,0),
                    TEXT CLOB,
                    FEATURES VARCHAR2(1000),
                    SNIPPET CLOB,
                    COMMENTS VARCHAR2(1000),
                    CREATE_DTM DATE  default sysdate not null)
                </item>
                <item>
                    CREATE INDEX {tableName}_SN_ID_IND ON {tableName} (ID)
                </item>
                <item>
                    CREATE INDEX {tableName}_DOC_NAME_IND ON {tableName} (DOC_NAME)
                </item>
            </sql>
            <insert>INSERT INTO {tableName} (DOC_NAME,ANNOTATOR, RUN_ID,TYPE,BEGIN,END,SNIPPET_BEGIN, TEXT,
                FEATURES,SNIPPET,COMMENTS)
                VALUES (?,?,?,?,?,?,?,?,?,?,?)</insert>
            <query>SELECT * FROM {tableName} WHERE ANNOTATOR=?</query>
            <drop>
                <item>DROP TABLE {tableName}</item>
            </drop>
        </item>

        <item>
            <!--this should be a view in production env, the table is only for testing purposes-->
            <name>DOCUMENTS_TABLE</name>
            <sql>
                <item>
                    CREATE TABLE {tableName} (
                    DOC_ID INTEGER PRIMARY KEY AUTOINCREMENT,
                    DATASET_ID CHAR(10),
                    BUNCH_ID INTEGER,
                    DOC_NAME TEXT,
                    TEXT TEXT,
                    DATE DATETIME,
                    REF_DATE DATETIME,
                    INSERT_DTM DATETIME);
                </item>
                <item>
                    CREATE INDEX IF NOT EXISTS {tableName}_DOC_IND ON {tableName} (DOC_NAME);
                </item>
                <item>
                    CREATE INDEX IF NOT EXISTS {tableName}_DATATSET_IND ON {tableName} (DATASET_ID);
                </item>
                <item>
                    CREATE INDEX IF NOT EXISTS {tableName}_BUNCH_IND ON {tableName} (BUNCH_ID);
                </item>
            </sql>
            <insert>INSERT INTO {tableName} (DATASET_ID, BUNCH_ID,DOC_NAME, TEXT,DATE,REF_DATE,INSERT_DTM) VALUES
                (?,?,?,?,?,?,CURRENT_TIMESTAMP);
            </insert>
            <query>SELECT BUNCH_ID PAT_ID, BUNCH_ID, NOTE_ID DOC_ID, NOTE_ID DOC_NAME, TEXT, N.RPT_TYPE_CD, PROC_DT "DATE", OPERATION_DATE REF_DTM, ROUND(N.PROC_DT-S.OPERATION_DATE) DIFF_DTM FROM DSS_DATASETS.BUCHER_EPIC_HL7_87482 N JOIN HAI_PATOS S ON  N.PAT_ID=S.PAT_ID WHERE NOTE_ID=? AND ((N.PROC_DT-S.OPERATION_DATE)>-1) AND ((N.PROC_DT-S.OPERATION_DATE)&lt;41)</query>
            <drop>
                <item>DROP TABLE {tableName}</item>
            </drop>
        </item>
    </templates>
    <syntax>
        <item>
            <name>limit</name>
            <sql>LIMIT</sql>
        </item>
    </syntax>

</config>
